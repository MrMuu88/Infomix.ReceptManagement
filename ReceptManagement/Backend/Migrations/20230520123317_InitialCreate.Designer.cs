// <auto-generated />
using System;
using Backend;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(ReceptDbContext))]
    [Migration("20230520123317_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.BNO", b =>
                {
                    b.Property<int>("BNOId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BNOId"));

                    b.Property<string>("BNOKod")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("BetegsegNeve")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BNOId");

                    b.ToTable("BNOk");
                });

            modelBuilder.Entity("Backend.Models.Paciens", b =>
                {
                    b.Property<int>("PaciensId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaciensId"));

                    b.Property<string>("Cim")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nev")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Szuletesnap")
                        .HasColumnType("datetime2");

                    b.Property<string>("TAJ")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaciensId");

                    b.ToTable("Paciensek");
                });

            modelBuilder.Entity("Backend.Models.Recept", b =>
                {
                    b.Property<int>("ReceptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceptId"));

                    b.Property<bool>("AltalanosJogcimmel")
                        .HasColumnType("bit");

                    b.Property<int>("BNOId")
                        .HasColumnType("int");

                    b.Property<bool>("EURendelkezessel")
                        .HasColumnType("bit");

                    b.Property<bool>("EUTeritesKotelesAronRendelve")
                        .HasColumnType("bit");

                    b.Property<bool>("Helyettesitheto")
                        .HasColumnType("bit");

                    b.Property<bool>("Kozgyogyellatottnak")
                        .HasColumnType("bit");

                    b.Property<int>("PaciensId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReceptKiallitasDatuma")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReceptSzovege")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TeljesAronRendelve")
                        .HasColumnType("bit");

                    b.HasKey("ReceptId");

                    b.HasIndex("BNOId");

                    b.HasIndex("PaciensId");

                    b.ToTable("Receptek");
                });

            modelBuilder.Entity("Backend.Models.Recept", b =>
                {
                    b.HasOne("Backend.Models.BNO", "BNO")
                        .WithMany("Receptek")
                        .HasForeignKey("BNOId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Backend.Models.Paciens", "Paciens")
                        .WithMany("Receptek")
                        .HasForeignKey("PaciensId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BNO");

                    b.Navigation("Paciens");
                });

            modelBuilder.Entity("Backend.Models.BNO", b =>
                {
                    b.Navigation("Receptek");
                });

            modelBuilder.Entity("Backend.Models.Paciens", b =>
                {
                    b.Navigation("Receptek");
                });
#pragma warning restore 612, 618
        }
    }
}
